*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="thor_tool_foxbin2prgcreateshortcuts.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS frmfoxbin2prgcreateshortcuts AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="cmdClose" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBinToText" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtBinToTextName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblTextToBin" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtTextToBinName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdEditBinToText" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSaveBinToText" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdEditTextToBin" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSaveTextToBin" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdEditNormalize" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSaveNormalize" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblNormalize" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtNormalizeName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdRemoveBinToText" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdRemoveTextToBin" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdRemoveNormalize" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdViewSendToFolder" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkBinToTextShowResults" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkTextToBinShowResults" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblConvert2Way" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtConvert2WayName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdEditConvert2Way" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSaveConvert2Way" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdRemoveConvert2Way" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkConvert2WayShowResults" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: activatehiddenform		&& Defines a form that the user can't see so that we can reliably deactive Thisform.
		*m: editshortcut		&& Opens the file properties dialog for the specified shortcut, or creates the shortcut if it doesn't exist.
		*m: geteditbuttoncaption		&& Determines the caption to use for the edit button of a specified shortcut.
		*m: isthorinstalled		&& Determines if the Thor framework is available.
		*m: releasehiddenform		&& Releases the hidden form created to divert focus from this form.
		*m: removeshortcut		&& Attempts to remove the specified shortcut, if it exists.
		*m: restorepersistentsettings		&& Restores the form settings that are to carry over from one session to another.
		*m: saveshortcutchanges		&& Saves any changes to the specified shortcut.
		*m: shortcutexists		&& Determines if the specified shortcut exists.
		*m: shortcutnamechanged		&& Determines if a different name has been entered for the specified shortcut.
		*m: showresultschanged		&& A wrapper for the shortcut engine method that checks if the show results flag has changed from the current shortcut setting.
		*p: lloadshortcutsonactive		&& Indicates whether shortcut information should be reloaded when the user activates the form.
		*p: ohiddenform		&& Stores a reference to a temporary form created to make it easy to deactivate this one.
		*p: osettings		&& Stores the Thor settings object used to save and restore form settings.
		*p: oshortcutengine		&& Stores a reference to the FoxBin2Prg shortcut engine.
	*</DefinedPropArrayMethod>

	BindControls = .F.
	Caption = "Create/Edit FoxBin2Prg Shortcuts"
	DoCreate = .T.
	Height = 481
	Left = 0
	lloadshortcutsonactive = .F.		&& Indicates whether shortcut information should be reloaded when the user activates the form.
	Name = "frmFoxBin2PrgCreateShortcuts"
	ohiddenform = .NULL.		&& Stores a reference to a temporary form created to make it easy to deactivate this one.
	osettings = .NULL.		&& Stores the Thor settings object used to save and restore form settings.
	oshortcutengine = .NULL.		&& Stores a reference to the FoxBin2Prg shortcut engine.
	ShowTips = .T.
	Top = 0
	Width = 390

	ADD OBJECT 'chkBinToTextShowResults' AS checkbox WITH ;
		Alignment = 0, ;
		Anchor = 11, ;
		Caption = "Show results message for the conversion", ;
		FontName = "Segoe UI", ;
		Height = 17, ;
		Left = 40, ;
		Name = "chkBinToTextShowResults", ;
		TabIndex = 3, ;
		Top = 65, ;
		Width = 325
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'chkConvert2WayShowResults' AS checkbox WITH ;
		Alignment = 0, ;
		Anchor = 11, ;
		Caption = "Show results message for the conversion", ;
		FontName = "Segoe UI", ;
		Height = 17, ;
		Left = 40, ;
		Name = "chkConvert2WayShowResults", ;
		TabIndex = 15, ;
		Top = 295, ;
		Width = 325
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'chkTextToBinShowResults' AS checkbox WITH ;
		Alignment = 0, ;
		Anchor = 11, ;
		Caption = "Show results message for the conversion", ;
		FontName = "Segoe UI", ;
		Height = 17, ;
		Left = 40, ;
		Name = "chkTextToBinShowResults", ;
		TabIndex = 9, ;
		Top = 180, ;
		Width = 325
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'cmdClose' AS commandbutton WITH ;
		Anchor = 12, ;
		Caption = "Close", ;
		FontName = "Segoe UI", ;
		Height = 27, ;
		Left = 290, ;
		Name = "cmdClose", ;
		TabIndex = 25, ;
		ToolTipText = "Close this settings form", ;
		Top = 450, ;
		Width = 80
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdEditBinToText' AS commandbutton WITH ;
		Anchor = 3, ;
		Caption = "Edit", ;
		FontName = "Segoe UI", ;
		Height = 27, ;
		Left = 15, ;
		Name = "cmdEditBinToText", ;
		TabIndex = 4, ;
		ToolTipText = "Edit this shortcut using the Windows file properties dialog", ;
		Top = 85, ;
		Width = 80
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdEditConvert2Way' AS commandbutton WITH ;
		Anchor = 3, ;
		Caption = "Edit", ;
		FontName = "Segoe UI", ;
		Height = 27, ;
		Left = 15, ;
		Name = "cmdEditConvert2Way", ;
		TabIndex = 16, ;
		ToolTipText = "Edit this shortcut using the Windows file properties dialog", ;
		Top = 315, ;
		Width = 80
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdEditNormalize' AS commandbutton WITH ;
		Anchor = 3, ;
		Caption = "Edit", ;
		FontName = "Segoe UI", ;
		Height = 27, ;
		Left = 15, ;
		Name = "cmdEditNormalize", ;
		TabIndex = 21, ;
		ToolTipText = "Edit this shortcut using the Windows file properties dialog", ;
		Top = 410, ;
		Width = 80
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdEditTextToBin' AS commandbutton WITH ;
		Anchor = 3, ;
		Caption = "Edit", ;
		FontName = "Segoe UI", ;
		Height = 27, ;
		Left = 15, ;
		Name = "cmdEditTextToBin", ;
		TabIndex = 10, ;
		ToolTipText = "Edit this shortcut using the Windows file properties dialog", ;
		Top = 200, ;
		Width = 80
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdRemoveBinToText' AS commandbutton WITH ;
		Caption = "Remove", ;
		FontName = "Segoe UI", ;
		Height = 27, ;
		Left = 175, ;
		Name = "cmdRemoveBinToText", ;
		TabIndex = 6, ;
		ToolTipText = 'Remove this shortcut from your Windows "Send to" folder', ;
		Top = 85, ;
		Width = 80
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdRemoveConvert2Way' AS commandbutton WITH ;
		Caption = "Remove", ;
		FontName = "Segoe UI", ;
		Height = 27, ;
		Left = 175, ;
		Name = "cmdRemoveConvert2Way", ;
		TabIndex = 18, ;
		ToolTipText = 'Remove this shortcut from your Windows "Send to" folder', ;
		Top = 315, ;
		Width = 80
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdRemoveNormalize' AS commandbutton WITH ;
		Caption = "Remove", ;
		FontName = "Segoe UI", ;
		Height = 27, ;
		Left = 175, ;
		Name = "cmdRemoveNormalize", ;
		TabIndex = 23, ;
		ToolTipText = 'Remove this shortcut from your Windows "Send to" folder', ;
		Top = 410, ;
		Width = 80
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdRemoveTextToBin' AS commandbutton WITH ;
		Caption = "Remove", ;
		FontName = "Segoe UI", ;
		Height = 27, ;
		Left = 175, ;
		Name = "cmdRemoveTextToBin", ;
		TabIndex = 12, ;
		ToolTipText = 'Remove this shortcut from your Windows "Send to" folder', ;
		Top = 200, ;
		Width = 80
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdSaveBinToText' AS commandbutton WITH ;
		Anchor = 3, ;
		Caption = "Save", ;
		FontName = "Segoe UI", ;
		Height = 27, ;
		Left = 95, ;
		Name = "cmdSaveBinToText", ;
		TabIndex = 5, ;
		ToolTipText = "Save the shortcut changes made in this form", ;
		Top = 85, ;
		Width = 80
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdSaveConvert2Way' AS commandbutton WITH ;
		Anchor = 3, ;
		Caption = "Save", ;
		FontName = "Segoe UI", ;
		Height = 27, ;
		Left = 95, ;
		Name = "cmdSaveConvert2Way", ;
		TabIndex = 17, ;
		ToolTipText = "Save the shortcut changes made in this form", ;
		Top = 315, ;
		Width = 80
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdSaveNormalize' AS commandbutton WITH ;
		Anchor = 3, ;
		Caption = "Save", ;
		FontName = "Segoe UI", ;
		Height = 27, ;
		Left = 95, ;
		Name = "cmdSaveNormalize", ;
		TabIndex = 22, ;
		ToolTipText = "Save the new shortcut name entered in the textbox", ;
		Top = 410, ;
		Width = 80
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdSaveTextToBin' AS commandbutton WITH ;
		Anchor = 3, ;
		Caption = "Save", ;
		FontName = "Segoe UI", ;
		Height = 27, ;
		Left = 95, ;
		Name = "cmdSaveTextToBin", ;
		TabIndex = 11, ;
		ToolTipText = "Save the shortcut changes made in this form", ;
		Top = 200, ;
		Width = 80
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdViewSendToFolder' AS commandbutton WITH ;
		Anchor = 6, ;
		Caption = 'View "Send to" folder', ;
		FontName = "Segoe UI", ;
		Height = 27, ;
		Left = 15, ;
		Name = "cmdViewSendToFolder", ;
		TabIndex = 24, ;
		ToolTipText = 'Open the "Send to" folder in Windows Explorer', ;
		Top = 450, ;
		Width = 140
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'lblBinToText' AS label WITH ;
		Anchor = 11, ;
		Caption = "Convert Binary to Text", ;
		FontName = "Segoe UI", ;
		Height = 17, ;
		Left = 20, ;
		Name = "lblBinToText", ;
		TabIndex = 1, ;
		Top = 20, ;
		Width = 348
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblConvert2Way' AS label WITH ;
		Anchor = 11, ;
		Caption = "2-Way Conversion", ;
		FontName = "Segoe UI", ;
		Height = 17, ;
		Left = 20, ;
		Name = "lblConvert2Way", ;
		TabIndex = 13, ;
		Top = 250, ;
		Width = 348
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblNormalize' AS label WITH ;
		Anchor = 11, ;
		Caption = "Normalize FileNames", ;
		FontName = "Segoe UI", ;
		Height = 17, ;
		Left = 20, ;
		Name = "lblNormalize", ;
		TabIndex = 19, ;
		Top = 365, ;
		Width = 348
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblTextToBin' AS label WITH ;
		Anchor = 11, ;
		Caption = "Convert Text to Binary", ;
		FontName = "Segoe UI", ;
		Height = 17, ;
		Left = 20, ;
		Name = "lblTextToBin", ;
		TabIndex = 7, ;
		Top = 135, ;
		Width = 348
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'txtBinToTextName' AS textbox WITH ;
		Anchor = 11, ;
		FontName = "Segoe UI", ;
		Height = 23, ;
		Left = 15, ;
		Name = "txtBinToTextName", ;
		TabIndex = 2, ;
		Top = 40, ;
		Width = 353
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtConvert2WayName' AS textbox WITH ;
		Anchor = 11, ;
		FontName = "Segoe UI", ;
		Height = 23, ;
		Left = 15, ;
		Name = "txtConvert2WayName", ;
		TabIndex = 14, ;
		Top = 270, ;
		Width = 353
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtNormalizeName' AS textbox WITH ;
		Anchor = 11, ;
		FontName = "Segoe UI", ;
		Height = 23, ;
		Left = 15, ;
		Name = "txtNormalizeName", ;
		TabIndex = 20, ;
		Top = 385, ;
		Width = 353
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtTextToBinName' AS textbox WITH ;
		Anchor = 11, ;
		FontName = "Segoe UI", ;
		Height = 23, ;
		Left = 15, ;
		Name = "txtTextToBinName", ;
		TabIndex = 8, ;
		Top = 155, ;
		Width = 353
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE Activate
		*------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts::Activate()
		*------------------------------------------------------------------------------------------
		#IF .F.
			LOCAL oShortcutEngine AS FoxBin2Prg_EditShortcutsEngine OF "D:\Users\Mike\Documents\Repositories\SCM Tools\Thor_Tool_FoxBin2PrgCreateShortcuts.PRG"
		#ENDIF
		
		IF VARTYPE( Thisform.oShortcutEngine ) = "O" ;
				AND Thisform.lLoadShortcutsOnActive
			* The user returned from the file properties dialog, so reload the
			* shortcuts to make sure this form is in synch with any changes
			* made in that dialog.
			Thisform.oShortcutEngine.LoadShortcuts()
			Thisform.lLoadShortcutsOnActive = .F.
		
			* A hidden form was used to deactivate this form so that this form
			* would be activated after the user finished in the file properties
			* dialog.  That hidden form is no longer needed, so release it.
			Thisform.ReleaseHiddenForm()
		
			* Refresh this form to display any changes.
			Thisform.Refresh()
		ENDIF
		
	ENDPROC

	PROCEDURE activatehiddenform		&& Defines a form that the user can't see so that we can reliably deactive Thisform.
		*----------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts::ActivateHiddenForm()
		*----------------------------------------------------------------------------------------------------
		LOCAL lcWindowName
		
		* Create a form that won't be visible to the user, so that we can activate
		* it.  The only way to deactivate this form we are currently in is to
		* activate some other window, and creating a small hidden window is
		* more reliable than trying to activate some other random window in
		* the IDE.
		IF ISNULL( Thisform.oHiddenForm )
			lcWindowName = Thisform.Name + "_HiddenWindow"
		
			DEFINE WINDOW ( m.lcWindowName ) AT -200, -200 SIZE 20, 20 ;
				NAME Thisform.oHiddenForm
		ENDIF
		
		Thisform.oHiddenForm.Show(2)
		
	ENDPROC

	PROCEDURE Destroy
		*-----------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts::Destroy()
		*-----------------------------------------------------------------------------------------
		* Save form settings for the next time this form is run.
		IF Thisform.IsThorInstalled()
			Thisform.oSettings.Save( Thisform )
		ENDIF
		
		* Cleanup object references.
		STORE .NULL. TO Thisform.oSettings, ;
						Thisform.oShortcutEngine
		
		Thisform.ReleaseHiddenForm()
		
		RETURN
		
	ENDPROC

	PROCEDURE editshortcut		&& Opens the file properties dialog for the specified shortcut, or creates the shortcut if it doesn't exist.
		*----------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts::EditShortcut()
		*----------------------------------------------------------------------------------------------
		LPARAMETERS tcShortcutType AS String
		
		#IF .F.
			LOCAL oShortcutEngine AS FoxBin2Prg_EditShortcutsEngine OF "D:\Users\Mike\Documents\Repositories\SCM Tools\Thor_Tool_FoxBin2PrgCreateShortcuts.PRG"
		#ENDIF
		
		DO CASE
			CASE ISNULL( Thisform.oShortcutEngine )
		
			CASE Thisform.oShortcutEngine.ShortcutExists( m.tcShortcutType )
				* Load the file properties dialog so that the user can edit
				* any settings of the shortcut.
				Thisform.oShortcutEngine.EditShortcut( m.tcShortcutType )
		
				* Unfortunately, control returns to this form immediately after
				* that dialog is loaded, so we don't have a simple way to check
				* if the user is finished with that dialog.  Set a flag to let
				* the Activate() method know that it needs to reload the shortcut
				* settings next time this form is activated.  Then, since the
				* file properties dialog doesn't deactive this form, activate
				* a hidden form to force this form to be deactivated.  I could
				* probably use a timer and the Windows API to watch for the
				* user to close the file properties dialog, but this should
				* generally be sufficient, and a lot simpler.
				Thisform.lLoadShortcutsOnActive = .T.
				Thisform.ActivateHiddenForm()
		
			CASE Thisform.oShortcutEngine.CreateShortcut( m.tcShortcutType )
				* The shortcut didn't exist yet, but has just been successfully
				* created.  Refresh this form to update the controls.
				Thisform.Refresh()
		
			OTHERWISE
				* The shortcut could not be created.
		ENDCASE
		
	ENDPROC

	PROCEDURE geteditbuttoncaption		&& Determines the caption to use for the edit button of a specified shortcut.
		*------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts::GetEditButtonCaption()
		*------------------------------------------------------------------------------------------------------
		LPARAMETERS tcShortcutType AS String
		
		#IF .F.
			LOCAL oShortcutEngine AS FoxBin2Prg_EditShortcutsEngine OF "D:\Users\Mike\Documents\Repositories\SCM Tools\Thor_Tool_FoxBin2PrgCreateShortcuts.PRG"
		#ENDIF
		
		LOCAL lcCaption
		
		* Determine what caption to display on the Edit button.
		DO CASE
			CASE ISNULL( Thisform.oShortcutEngine )
				lcCaption = "N/A"
		
			CASE Thisform.oShortcutEngine.ShortcutExists( m.tcShortcutType )
				* The shortcut exists, so it can be edited.
				lcCaption = "Edit"
		
			OTHERWISE
				* The shortcut needs to be created first before it can be edited.
				lcCaption = "Create"
		ENDCASE
		
		RETURN m.lcCaption
		
	ENDPROC

	PROCEDURE Init
		*--------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts::Init()
		*--------------------------------------------------------------------------------------
		LPARAMETERS toShortcutEngine AS Object
		
		IF VARTYPE( m.toShortcutEngine ) = "O"
			* Store a reference to the shortcut engine class, and bind any
			* controls bound to properties of the engine class.
			Thisform.oShortcutEngine = m.toShortcutEngine
			Thisform.BindControls = .T.
		ELSE
			MESSAGEBOX( "FoxBin2Prg Shortcut manager engine was not passed.", 16, Thisform.Caption, 5000 )
			RETURN .F.
		ENDIF
		
		* Restore any form settings saved in a prior call to this form.
		Thisform.RestorePersistentSettings()
		
	ENDPROC

	PROCEDURE isthorinstalled		&& Determines if the Thor framework is available.
		*-------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts::IsThorInstalled()
		*-------------------------------------------------------------------------------------------------
		LOCAL llIsInstalled
		
		llIsInstalled = ( TYPE( "_SCREEN.cThorDispatcher" ) = "C" ;
				AND NOT EMPTY( _SCREEN.cThorDispatcher ) )
		
		RETURN m.llIsInstalled
		
	ENDPROC

	PROCEDURE releasehiddenform		&& Releases the hidden form created to divert focus from this form.
		*---------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts::ReleaseHiddenForm()
		*---------------------------------------------------------------------------------------------------
		* Make sure the hidden form created by Thisform.ActivateHiddenForm()
		* is released.
		TRY
			Thisform.oHiddenForm.Release()
		CATCH
		ENDTRY
		
		Thisform.oHiddenForm = .NULL.
		
	ENDPROC

	PROCEDURE removeshortcut		&& Attempts to remove the specified shortcut, if it exists.
		*------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts::RemoveShortcut()
		*------------------------------------------------------------------------------------------------
		LPARAMETERS tcShortcutType AS String
		
		#IF .F.
			LOCAL oShortcutEngine AS FoxBin2Prg_EditShortcutsEngine OF "D:\Users\Mike\Documents\Repositories\SCM Tools\Thor_Tool_FoxBin2PrgCreateShortcuts.PRG"
		#ENDIF
		
		IF NOT ISNULL( Thisform.oShortcutEngine )
			* Attempt to remove the specified shortcut, then refresh the form
			* so that the controls reflect that the shortcut is gone.
			Thisform.oShortcutEngine.RemoveShortcut( m.tcShortcutType )
			Thisform.Refresh()
		ENDIF
		
	ENDPROC

	PROCEDURE restorepersistentsettings		&& Restores the form settings that are to carry over from one session to another.
		*-----------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts::RestorePersistentSettings()
		*-----------------------------------------------------------------------------------------------------------
		* ThorFormSettings home page = http://vfpx.codeplex.com/wikipage?title=Thor%20Framework%20FormSettings
		#IF .F.
			oSettings AS Thor_Form_Settings OF "C:\WORK\VFP\SHARED\TOOLS\Thor\Source\Thor_FoxResource.vcx"
		#ENDIF
		
		LOCAL lcPersistedProperties
		
		* Don't allow the height of the form to be changed, since there's no
		* benefit to that.  Make the original width the minimum, since this
		* should be small enough.
		Thisform.MinHeight = Thisform.Height
		Thisform.MaxHeight = Thisform.Height
		Thisform.MinWidth = Thisform.Width
		
		* Restore the previous position and width of this form.
		TEXT TO lcPersistedProperties NOSHOW TEXTMERGE
		Top
		Left
		Width
		ENDTEXT
			
		lcPersistedProperties = STRTRAN( m.lcPersistedProperties, CHR(13) + CHR(10), ", " )
		
		IF Thisform.IsThorInstalled()
			Thisform.oSettings = EXECSCRIPT( _Screen.cThorDispatcher, "class= ThorFormSettings", "Edit FoxBin2Prg Shortcuts" )
			Thisform.oSettings.Restore( Thisform, m.lcPersistedProperties )
		ENDIF
		
	ENDPROC

	PROCEDURE saveshortcutchanges		&& Saves any changes to the specified shortcut.
		*--------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts::SaveShortcutName()
		*--------------------------------------------------------------------------------------------------
		LPARAMETERS tcShortcutType AS String
		
		#IF .F.
			LOCAL oShortcutEngine AS FoxBin2Prg_EditShortcutsEngine OF "D:\Users\Mike\Documents\Repositories\SCM Tools\Thor_Tool_FoxBin2PrgCreateShortcuts.PRG"
		#ENDIF
		
		DO CASE
			CASE ISNULL( Thisform.oShortcutEngine )
		
			CASE Thisform.oShortcutEngine.SaveShortcuts( m.tcShortcutType )
				* Update the form to reflect that the displayed shortcut name
				* is now saved.
				Thisform.Refresh()
		
			OTHERWISE
		ENDCASE
		
	ENDPROC

	PROCEDURE shortcutexists		&& Determines if the specified shortcut exists.
		*------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts::ShortcutExists()
		*------------------------------------------------------------------------------------------------
		LPARAMETERS tcShortcutType AS String
		
		#IF .F.
			LOCAL oShortcutEngine AS FoxBin2Prg_EditShortcutsEngine OF "D:\Users\Mike\Documents\Repositories\SCM Tools\Thor_Tool_FoxBin2PrgCreateShortcuts.PRG"
		#ENDIF
		
		LOCAL llExists
		
		llExists = .F.
		
		IF NOT ISNULL( Thisform.oShortcutEngine )
			llExists = Thisform.oShortcutEngine.ShortcutExists( m.tcShortcutType )
		ENDIF
		
		RETURN m.llExists
		
	ENDPROC

	PROCEDURE shortcutnamechanged		&& Determines if a different name has been entered for the specified shortcut.
		*-----------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts::ShortcutNameChanged()
		*-----------------------------------------------------------------------------------------------------
		LPARAMETERS tcShortcutType AS String
		
		#IF .F.
			LOCAL oShortcutEngine AS FoxBin2Prg_EditShortcutsEngine OF "C:\Work\VFP\Shared\SCM-Tools\Thor_Tool_Repository_FoxBin2PrgCreateShortcuts.PRG"
		#ENDIF
		
		LOCAL llChanged
		
		llChanged = .F.
		
		IF NOT ISNULL( Thisform.oShortcutEngine )
			llChanged = Thisform.oShortcutEngine.ShortcutNameChanged( m.tcShortcutType )
		ENDIF
		
		RETURN m.llChanged
		
	ENDPROC

	PROCEDURE showresultschanged		&& A wrapper for the shortcut engine method that checks if the show results flag has changed from the current shortcut setting.
		*----------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts::ShowResultsChanged()
		*----------------------------------------------------------------------------------------------------
		LPARAMETERS tcShortcutType AS String
		
		#IF .F.
			LOCAL oShortcutEngine AS FoxBin2Prg_EditShortcutsEngine OF "C:\Work\VFP\Shared\SCM-Tools\Thor_Tool_Repository_FoxBin2PrgCreateShortcuts.PRG"
		#ENDIF
		
		LOCAL llChanged
		
		llChanged = .F.
		
		IF NOT ISNULL( Thisform.oShortcutEngine )
			llChanged = Thisform.oShortcutEngine.ShortcutShowResultsChanged( m.tcShortcutType )
		ENDIF
		
		RETURN m.llChanged
		
	ENDPROC

	PROCEDURE chkBinToTextShowResults.Init
		*--------------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.chkBinToTextShowResults::Init()
		*--------------------------------------------------------------------------------------------------------------
		#IF .F.
			LOCAL oShortcutEngine AS FoxBin2Prg_EditShortcutsEngine OF "C:\Work\VFP\Shared\SCM-Tools\Thor_Tool_Repository_FoxBin2PrgCreateShortcuts.PRG"
		#ENDIF
		
		This.ControlSource = "Thisform.oShortcutEngine.lBinToTextShowResultMessage"
		This.ToolTipText = "Indicates whether a success message should be displayed when this conversion process is complete"
		
	ENDPROC

	PROCEDURE chkBinToTextShowResults.InteractiveChange
		*---------------------------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.chkBinToTextShowResults::InteractiveChange()
		*---------------------------------------------------------------------------------------------------------------------------
		* Make sure the control source is updated, since that doesn't happen
		* immediately.
		STORE This.Value TO ( This.ControlSource )
		
		Thisform.Refresh()
		
	ENDPROC

	PROCEDURE chkConvert2WayShowResults.Init
		*----------------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.chkConvert2WayShowResults::Init()
		*----------------------------------------------------------------------------------------------------------------
		#IF .F.
			LOCAL oShortcutEngine AS FoxBin2Prg_EditShortcutsEngine OF "C:\Work\VFP\Shared\SCM-Tools\Thor_Tool_Repository_FoxBin2PrgCreateShortcuts.PRG"
		#ENDIF
		
		This.ControlSource = "Thisform.oShortcutEngine.lConvert2WayShowResultMessage"
		This.ToolTipText = "Indicates whether a success message should be displayed when this conversion process is complete"
		
	ENDPROC

	PROCEDURE chkConvert2WayShowResults.InteractiveChange
		*-----------------------------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.chkConvert2WayShowResults::InteractiveChange()
		*-----------------------------------------------------------------------------------------------------------------------------
		* Make sure the control source is updated, since that doesn't happen
		* immediately.
		STORE This.Value TO ( This.ControlSource )
		
		Thisform.Refresh()
		
	ENDPROC

	PROCEDURE chkTextToBinShowResults.Init
		*--------------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.chkTextToBinShowResults::Init()
		*--------------------------------------------------------------------------------------------------------------
		#IF .F.
			LOCAL oShortcutEngine AS FoxBin2Prg_EditShortcutsEngine OF "C:\Work\VFP\Shared\SCM-Tools\Thor_Tool_Repository_FoxBin2PrgCreateShortcuts.PRG"
		#ENDIF
		
		This.ControlSource = "Thisform.oShortcutEngine.lTextToBinShowResultMessage"
		This.ToolTipText = "Indicates whether a success message should be displayed when this conversion process is complete"
		
	ENDPROC

	PROCEDURE chkTextToBinShowResults.InteractiveChange
		*---------------------------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.chkTextToBinShowResults::InteractiveChange()
		*---------------------------------------------------------------------------------------------------------------------------
		* Make sure the control source is updated, since that doesn't happen
		* immediately.
		STORE This.Value TO ( This.ControlSource )
		
		Thisform.Refresh()
		
	ENDPROC

	PROCEDURE cmdClose.Click
		*------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.cmdClose::Click()
		*------------------------------------------------------------------------------------------------
		Thisform.Release()
		
	ENDPROC

	PROCEDURE cmdEditBinToText.Click
		*--------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.cmdEditBinToText::Click()
		*--------------------------------------------------------------------------------------------------------
		Thisform.EditShortcut( "B" )
		
	ENDPROC

	PROCEDURE cmdEditBinToText.Refresh
		*----------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.cmdEditBinToText::Refresh()
		*----------------------------------------------------------------------------------------------------------
		This.Caption = Thisform.GetEditButtonCaption( "B" )
		
	ENDPROC

	PROCEDURE cmdEditConvert2Way.Click
		*----------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.cmdEditConvert2Way::Click()
		*----------------------------------------------------------------------------------------------------------
		Thisform.EditShortcut( "2" )
		
	ENDPROC

	PROCEDURE cmdEditConvert2Way.Refresh
		*------------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.cmdEditConvert2Way::Refresh()
		*------------------------------------------------------------------------------------------------------------
		This.Caption = Thisform.GetEditButtonCaption( "2" )
		
	ENDPROC

	PROCEDURE cmdEditNormalize.Click
		*--------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.cmdEditNormalize::Click()
		*--------------------------------------------------------------------------------------------------------
		Thisform.EditShortcut( "N" )
		
	ENDPROC

	PROCEDURE cmdEditNormalize.Refresh
		*----------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.cmdEditNormalize::Refresh()
		*----------------------------------------------------------------------------------------------------------
		This.Caption = Thisform.GetEditButtonCaption( "N" )
		
	ENDPROC

	PROCEDURE cmdEditTextToBin.Click
		*--------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.cmdEditTextToBin::Click()
		*--------------------------------------------------------------------------------------------------------
		Thisform.EditShortcut( "T" )
		
	ENDPROC

	PROCEDURE cmdEditTextToBin.Refresh
		*----------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.cmdEditTextToBin::Refresh()
		*----------------------------------------------------------------------------------------------------------
		This.Caption = Thisform.GetEditButtonCaption( "T" )
		
	ENDPROC

	PROCEDURE cmdRemoveBinToText.Click
		*----------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.cmdRemoveBinToText::Click()
		*----------------------------------------------------------------------------------------------------------
		Thisform.RemoveShortcut( "B" )
		
	ENDPROC

	PROCEDURE cmdRemoveBinToText.Refresh
		*------------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.cmdRemoveBinToText::Refresh()
		*------------------------------------------------------------------------------------------------------------
		This.Enabled = Thisform.ShortcutExists( "B" )
		
	ENDPROC

	PROCEDURE cmdRemoveConvert2Way.Click
		*------------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.cmdRemoveConvert2Way::Click()
		*------------------------------------------------------------------------------------------------------------
		Thisform.RemoveShortcut( "2" )
		
	ENDPROC

	PROCEDURE cmdRemoveConvert2Way.Refresh
		*--------------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.cmdRemoveConvert2Way::Refresh()
		*--------------------------------------------------------------------------------------------------------------
		This.Enabled = Thisform.ShortcutExists( "2" )
		
	ENDPROC

	PROCEDURE cmdRemoveNormalize.Click
		*----------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.cmdRemoveNormalize::Click()
		*----------------------------------------------------------------------------------------------------------
		Thisform.RemoveShortcut( "N" )
		
	ENDPROC

	PROCEDURE cmdRemoveNormalize.Refresh
		*------------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.cmdRemoveNormalize::Refresh()
		*------------------------------------------------------------------------------------------------------------
		This.Enabled = Thisform.ShortcutExists( "N" )
		
	ENDPROC

	PROCEDURE cmdRemoveTextToBin.Click
		*----------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.cmdRemoveTextToBin::Click()
		*----------------------------------------------------------------------------------------------------------
		Thisform.RemoveShortcut( "T" )
		
	ENDPROC

	PROCEDURE cmdRemoveTextToBin.Refresh
		*------------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.cmdRemoveTextToBin::Refresh()
		*------------------------------------------------------------------------------------------------------------
		This.Enabled = Thisform.ShortcutExists( "T" )
		
	ENDPROC

	PROCEDURE cmdSaveBinToText.Click
		*--------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.cmdSaveBinToText::Click()
		*--------------------------------------------------------------------------------------------------------
		Thisform.SaveShortcutChanges( "B" )
		
	ENDPROC

	PROCEDURE cmdSaveBinToText.Refresh
		*----------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.cmdSaveBinToText::Refresh()
		*----------------------------------------------------------------------------------------------------------
		This.Enabled = Thisform.ShortcutNameChanged( "B" ) ;
				OR Thisform.ShowResultsChanged( "B" )
		
	ENDPROC

	PROCEDURE cmdSaveConvert2Way.Click
		*----------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.cmdSaveConvert2Way::Click()
		*----------------------------------------------------------------------------------------------------------
		Thisform.SaveShortcutChanges( "2" )
		
	ENDPROC

	PROCEDURE cmdSaveConvert2Way.Refresh
		*------------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.cmdSaveConvert2Way::Refresh()
		*------------------------------------------------------------------------------------------------------------
		This.Enabled = Thisform.ShortcutNameChanged( "2" ) ;
				OR Thisform.ShowResultsChanged( "2" )
		
	ENDPROC

	PROCEDURE cmdSaveNormalize.Click
		*--------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.cmdSaveNormalize::Click()
		*--------------------------------------------------------------------------------------------------------
		Thisform.SaveShortcutChanges( "N" )
		
	ENDPROC

	PROCEDURE cmdSaveNormalize.Refresh
		*----------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.cmdSaveNormalize::Refresh()
		*----------------------------------------------------------------------------------------------------------
		This.Enabled = Thisform.ShortcutNameChanged( "N" )
		
	ENDPROC

	PROCEDURE cmdSaveTextToBin.Click
		*--------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.cmdSaveTextToBin::Click()
		*--------------------------------------------------------------------------------------------------------
		Thisform.SaveShortcutChanges( "T" )
		
	ENDPROC

	PROCEDURE cmdSaveTextToBin.Refresh
		*----------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.cmdSaveTextToBin::Refresh()
		*----------------------------------------------------------------------------------------------------------
		This.Enabled = Thisform.ShortcutNameChanged( "T" ) ;
				OR Thisform.ShowResultsChanged( "T" )
		
	ENDPROC

	PROCEDURE cmdViewSendToFolder.Click
		*-----------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.cmdViewSendToFolder::Click()
		*-----------------------------------------------------------------------------------------------------------
		Thisform.oShortcutEngine.ViewSendToFolder()
		
	ENDPROC

	PROCEDURE txtBinToTextName.Init
		*-------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.txtBinToTextName::Init()
		*-------------------------------------------------------------------------------------------------------
		#IF .F.
			LOCAL oShortcutEngine AS FoxBin2Prg_EditShortcutsEngine OF "D:\Users\Mike\Documents\Repositories\SCM Tools\Thor_Tool_FoxBin2PrgCreateShortcuts.PRG"
		#ENDIF
		
		This.ControlSource = "Thisform.oShortcutEngine.cBinToTextSCName"
		This.ToolTipText = "Edit the name assigned to this shortcut"
		
	ENDPROC

	PROCEDURE txtBinToTextName.LostFocus
		*------------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.txtBinToTextName::LostFocus()
		*------------------------------------------------------------------------------------------------------------
		IF Thisform.ShortcutNameChanged( "B" )
			Thisform.Refresh()
		ENDIF
		
	ENDPROC

	PROCEDURE txtConvert2WayName.Init
		*---------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.txtConvert2WayName::Init()
		*---------------------------------------------------------------------------------------------------------
		#IF .F.
			LOCAL oShortcutEngine AS FoxBin2Prg_EditShortcutsEngine OF "C:\Work\VFP\Shared\SCM-Tools\Thor_Tool_Repository_FoxBin2PrgCreateShortcuts.PRG"
		#ENDIF
		
		This.ControlSource = "Thisform.oShortcutEngine.cConvert2WaySCName"
		This.ToolTipText = "Edit the name assigned to this shortcut"
		
	ENDPROC

	PROCEDURE txtConvert2WayName.LostFocus
		*--------------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.txtConvert2WayName::LostFocus()
		*--------------------------------------------------------------------------------------------------------------
		IF Thisform.ShortcutNameChanged( "2" )
			Thisform.Refresh()
		ENDIF
		
	ENDPROC

	PROCEDURE txtNormalizeName.Init
		*-------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.txtNormalizeName::Init()
		*-------------------------------------------------------------------------------------------------------
		#IF .F.
			LOCAL oShortcutEngine AS FoxBin2Prg_EditShortcutsEngine OF "D:\Users\Mike\Documents\Repositories\SCM Tools\Thor_Tool_FoxBin2PrgCreateShortcuts.PRG"
		#ENDIF
		
		This.ControlSource = "Thisform.oShortcutEngine.cNormalizeSCName"
		This.ToolTipText = "Edit the name assigned to this shortcut"
		
	ENDPROC

	PROCEDURE txtNormalizeName.LostFocus
		*------------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.txtNormalizeName::LostFocus()
		*------------------------------------------------------------------------------------------------------------
		IF Thisform.ShortcutNameChanged( "N" )
			Thisform.Refresh()
		ENDIF
		
	ENDPROC

	PROCEDURE txtTextToBinName.Init
		*-------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.txtTextToBinName::Init()
		*-------------------------------------------------------------------------------------------------------
		#IF .F.
			LOCAL oShortcutEngine AS FoxBin2Prg_EditShortcutsEngine OF "D:\Users\Mike\Documents\Repositories\SCM Tools\Thor_Tool_FoxBin2PrgCreateShortcuts.PRG"
		#ENDIF
		
		This.ControlSource = "Thisform.oShortcutEngine.cTextToBinSCName"
		This.ToolTipText = "Edit the name assigned to this shortcut"
		
	ENDPROC

	PROCEDURE txtTextToBinName.LostFocus
		*------------------------------------------------------------------------------------------------------------
		* Method: THOR_TOOL_FOXBIN2PRGCREATESHORTCUTS.SCX/frmFoxBin2PrgCreateShortcuts.txtTextToBinName::LostFocus()
		*------------------------------------------------------------------------------------------------------------
		IF Thisform.ShortcutNameChanged( "T" )
			Thisform.Refresh()
		ENDIF
		
	ENDPROC

ENDDEFINE
